apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "comet-api.fullname" . }}
  labels:
    {{- include "comet-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "comet-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "comet-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ include "comet-api.fullname" . }}-image-pull-secret
      {{- end }}
      serviceAccountName: {{ include "comet-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      automountServiceAccountToken: {{ .Values.autoMountServiceAccountToken }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.hash }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
            {{- if .Values.env }}
            - configMapRef:
                name: {{ include "comet-api.fullname" . }}
            {{- end }}
            {{- range $key, $val := .Values.additionalConfigMapNames }}
            - configMapRef:
                name:  {{ $val }}
            {{- end }}
            {{- if .Values.secrets }}
            - secretRef:
                name: {{ include "comet-api.fullname" . }}
            {{- end }}
            {{- range $key, $val := .Values.additionalSecretNames }}
            - secretRef:
                name:  {{ $val }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: {{ .Chart.Name }}-migrations
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.hash }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "-c", "npm run db:migrate:prod"]
          envFrom:
            {{- if .Values.env }}
            - configMapRef:
                name: {{ include "comet-api.fullname" . }}
            {{- end }}
            {{- range $key, $val := .Values.additionalConfigMapNames }}
            - configMapRef:
                name:  {{ $val }}
            {{- end }}
            {{- if .Values.secrets }}
            - secretRef:
                name: {{ include "comet-api.fullname" . }}
            {{- end }}
            {{- range $key, $val := .Values.additionalSecretNames }}
            - secretRef:
                name:  {{ $val }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
