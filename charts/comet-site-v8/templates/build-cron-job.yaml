{{- if .Values.builder.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "comet-site.fullname" . }}-build
  labels:
    comet-dxp.com/builder: "true"
    comet-dxp.com/instance: "{{ .Release.Name }}"
    {{- include "comet-site.labels" . | nindent 4 }}
  annotations:
    comet-dxp.com/content-scope: '{{- toJson .Values.contentScope }}'
    comet-dxp.com/label: "{{ .Values.label }}"
spec:
  schedule: {{ .Values.builder.schedule }}
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  jobTemplate:
    metadata:
      annotations:
        comet-dxp.com/trigger: "cronjob"
        comet-dxp.com/content-scope: '{{- toJson .Values.contentScope }}'
        comet-dxp.com/label: "{{ .Values.label }}"
      labels:
        comet-dxp.com/builder: "true"
        comet-dxp.com/instance: "{{ .Release.Name }}"
        comet-dxp.com/parent-cron-job: {{ include "comet-site.fullname" . }}-build
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 3600
      ttlSecondsAfterFinished: 604800 # 7 days
      template:
        spec:
          imagePullSecrets:
            - name: {{ include "comet-site.fullname" . }}-image-pull-secret
          restartPolicy: "Never"
          serviceAccountName: {{ include "comet-site.fullname" . }}
          securityContext:
            {{- toYaml .Values.builder.podSecurityContext | nindent 12 }}
          automountServiceAccountToken: {{ .Values.autoMountServiceAccountToken }}
          containers:
            - name: {{ .Chart.Name }}-build
              securityContext:
                {{- toYaml .Values.builder.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}@{{ .Values.image.hash }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["bash", "-c"]
              args:
                - set -e;
                  export BUILD_FILE=build_$(date +%F_%T).tar;
                  npm run next-build;
                  tar --force-local -cf $BUILD_FILE -C .next .;
                  rsync --remove-source-files ./$BUILD_FILE /mnt/generated-sites/;
                  rm -f $(ls -1dt /mnt/generated-sites/* | tail -n +3);
                  curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl;
                  chmod u+x ./kubectl;
                  NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace);
                  ./kubectl rollout restart deployment {{ include "comet-site.fullname" . }} -n $NAMESPACE;
              env:
                - name: KUBECTL_VERSION
                  value: "{{ .Values.builder.kubectlVersion }}"
              {{- with .Values.builder.extraEnv }}
                {{- toYaml . | nindent 16 }}
              {{- end }}
              envFrom:
                - configMapRef:
                    name: {{ include "comet-site.fullname" . }}
                - secretRef:
                    name: {{ include "comet-site.fullname" . }}
                {{- range $key, $val := .Values.additionalSecretNames }}
                - secretRef:
                    name:  {{ $val }}
                {{- end }}
              volumeMounts:
                - mountPath: /mnt/generated-sites/
                  name: generated-sites
              resources:
                {{- toYaml .Values.builder.resources | nindent 16 }}
          volumes:
            - name: generated-sites
              persistentVolumeClaim:
{{- if and .Values.pvc.create .Values.pvc.name }}
                claimName: {{ .Values.pvc.name }}
{{- else if .Values.pvc.create }}
                claimName: {{ include "comet-site.fullname" . }}-build
{{- else }}
                claimName: {{ .Values.persistence.existingClaim }}
{{- end }}
{{- end }}
