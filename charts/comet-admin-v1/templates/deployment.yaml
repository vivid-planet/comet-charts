apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "comet-admin.fullname" . }}
  labels:
    {{- include "comet-admin.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "comet-admin.selectorMatchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- if .Values.image.pullSecret }}
        checksum/image-pull-secret: {{ include (print $.Template.BasePath "/image-pull-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "comet-admin.selectorLabels" . | nindent 8 }}
        {{- range $key, $val := .Values.additionalPodLabels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ include "comet-admin.fullname" . }}-image-pull-secret
      {{- end }}
      automountServiceAccountToken: {{ .Values.autoMountServiceAccountToken }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.hash }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.containerPorts.http }}
              protocol: TCP
            {{- end }}
          env:
            - name: NODE_ENV
              value: "{{ .Values.nodeEnv }}"
            - name: NPM_RUN
              value: "{{ .Values.npmRun }}"
            - name: TZ
              value: "{{ .Values.timeZone }}"
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /status/health
              port: http
          readinessProbe:
            httpGet:
              path: /status/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
